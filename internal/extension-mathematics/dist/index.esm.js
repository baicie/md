import{getChangedRanges as t,Extension as e}from"@tiptap/core";import{Plugin as i,PluginKey as o}from"@tiptap/pm/state";import{DecorationSet as n,Decoration as a}from"@tiptap/pm/view";import d from"katex";const r=e=>{const{regex:r,katexOptions:s={},editor:c,shouldRender:m}=e;return new i({key:new o("mathematics"),state:{init:()=>({decorations:void 0,isEditable:void 0}),apply(e,i,o,p){if(!e.docChanged&&!e.selectionSet&&i.decorations)return i;const l=(i.decorations||n.empty).map(e.mapping,e.doc),{selection:h}=p,f=c.isEditable,u=[],{minFrom:x,maxTo:g}=function(e,i,o,n,a){let d=0,r=e.doc.nodeSize-2;return i.isEditable!==o?(d=0,r=e.doc.nodeSize-2):n.docChanged?(d=e.doc.nodeSize-2,r=0,t(n).forEach((t=>{d=Math.min(d,t.newRange.from),r=Math.max(r,t.newRange.to)}))):n.selectionSet&&(d=Math.min(a.selection.$from.before(),e.selection.$from.before()),r=Math.max(a.selection.$to.after(),e.selection.$to.after())),{minFrom:d,maxTo:r}}(p,i,f,e,o);p.doc.nodesBetween(x,g,((t,e)=>{const i=m(p,e,t);if(t.isText&&t.text&&i){let i;for(;i=r.exec(t.text);){const t=e+i.index,o=t+i[0].length,n=i.slice(1).find(Boolean);if(n){const e=h.from-h.to,i=h.anchor>=t&&h.anchor<=o,r=h.from>=t&&h.to<=o,c=0===e&&i||r;if(l.find(t,o,(t=>c===t.isEditing&&n===t.content&&f===t.isEditable&&s===t.katexOptions)).length)continue;u.push(a.inline(t,o,{class:c&&f?"Tiptap-mathematics-editor":"Tiptap-mathematics-editor Tiptap-mathematics-editor--hidden",style:c&&f?void 0:"display: inline-block; height: 0; opacity: 0; overflow: hidden; position: absolute; width: 0;"},{content:n,isEditable:f,isEditing:c,katexOptions:s})),f&&c||u.push(a.widget(t,(()=>{const t=document.createElement("span");t.classList.add("Tiptap-mathematics-render"),f&&t.classList.add("Tiptap-mathematics-render--editable");try{d.render(n,t,s)}catch(e){t.innerHTML=n}return t}),{content:n,isEditable:f,isEditing:c,katexOptions:s}))}}}}));const b=u.flatMap((t=>l.find(t.from,t.to)));return{decorations:l.remove(b).add(e.doc,u),isEditable:f}}},props:{decorations(t){var e,i;return null!==(i=null===(e=this.getState(t))||void 0===e?void 0:e.decorations)&&void 0!==i?i:n.empty}}})},s=(t,e)=>!("codeBlock"===t.doc.resolve(e).parent.type.name),c=e.create({name:"Mathematics",addOptions:()=>({regex:/\$([^\$]*)\$/gi,katexOptions:void 0,shouldRender:s}),addProseMirrorPlugins(){return[r({...this.options,editor:this.editor})]}});export{c as Mathematics,r as MathematicsPlugin,c as default,s as defaultShouldRender};
