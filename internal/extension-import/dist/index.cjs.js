"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("@tiptap/core");const t=(e,t)=>{t.blockQuote&&e.searchParams.set("blockquote",t.blockQuote),t.bold&&e.searchParams.set("bold",t.bold),t.bulletList&&e.searchParams.set("bulletlist",t.bulletList),t.code&&e.searchParams.set("code",t.code),t.codeBlock&&e.searchParams.set("codeblock",t.codeBlock),t.hardBreak&&e.searchParams.set("hardbreak",t.hardBreak),t.heading&&e.searchParams.set("heading",t.heading),t.horizontalRule&&e.searchParams.set("horizontalrule",t.horizontalRule),t.italic&&e.searchParams.set("italic",t.italic),t.link&&e.searchParams.set("link",t.link),t.listItem&&e.searchParams.set("listitem",t.listItem),t.orderedList&&e.searchParams.set("orderedlist",t.orderedList),t.paragraph&&e.searchParams.set("paragraph",t.paragraph),t.strike&&e.searchParams.set("strikethrough",t.strike),t.table&&e.searchParams.set("table",t.table),t.tableCell&&e.searchParams.set("tablecell",t.tableCell),t.tableHeader&&e.searchParams.set("tableheader",t.tableHeader),t.tableRow&&e.searchParams.set("tablerow",t.tableRow),t.underline&&e.searchParams.set("underline",t.underline)};function r({json:e,validMarks:t,validNodes:a,options:o,rewrittenContent:s=[]}){return e.marks&&Array.isArray(e.marks)&&(e.marks=e.marks.filter((r=>{const a="string"==typeof r?r:r.type;return!!t.has(a)||(s.push({original:JSON.parse(JSON.stringify(e)),unsupported:a}),!1)}))),e.content&&Array.isArray(e.content)&&(e.content=e.content.map((e=>r({json:e,validMarks:t,validNodes:a,options:o,rewrittenContent:s}).json)).filter((e=>null!=e))),e.type&&!a.has(e.type)?e.content&&Array.isArray(e.content)?(s.push({original:JSON.parse(JSON.stringify(e)),unsupported:e.type}),e.type="paragraph",{json:e,rewrittenContent:s}):{json:null,rewrittenContent:s}:{json:e,rewrittenContent:s}}function a(e,t,a){return r({json:e,validNodes:new Set(Object.keys(t.nodes)),validMarks:new Set(Object.keys(t.marks)),options:a})}const o=e.Extension.create({name:"import",addOptions:()=>({endpoint:"https://api.tiptap.dev/v1/convert",token:"",appId:"",imageUploadCallbackUrl:void 0}),addCommands(){return{import:e=>()=>{let{file:r}=e;const{format:o,onImport:s}=e,n=new FormData;r.name.endsWith(".md")&&!r.type&&(r=new File([r],r.name,{type:"text/markdown"})),n.append("file",r),this.options.imageUploadCallbackUrl&&n.append("imageUploadCallbackUrl",this.options.imageUploadCallbackUrl);const i=new URL(`${this.options.endpoint}/import${this.options.experimentalDocxImport&&"application/vnd.openxmlformats-officedocument.wordprocessingml.document"===r.type?"-docx":""}`);return"gfm"===o&&i.searchParams.set("gfm","1"),e.types&&t(i,e.types),fetch(i.href,{method:"POST",body:n,headers:{Authorization:`Bearer ${this.options.token}`,"X-App-Id":this.options.appId}}).then((e=>{if(!e.ok)throw new Error(e.statusText);return e.json()})).then((e=>{const t=(t=e.data.content)=>{try{const{json:e,rewrittenContent:r}=a(t,this.editor.schema);r.length&&"development"===process.env.NODE_ENV&&console.warn("Unknown content was found and replaced:",r),this.editor.commands.insertContentAt({from:0,to:this.editor.state.doc.nodeSize-2},e,{errorOnInvalidContent:!1})}catch(e){throw console.error(e),e}};return s?s({content:e.data.content,error:null,setEditorContent:t}):t()})).catch((e=>{if(!s)throw e;s({content:null,error:e})})),!0}}}});exports.Import=o,exports.createTypeOptionParams=t,exports.default=o,exports.formatMap={docx:"docx",odt:"odt",md:"md",gfm:"md"};
